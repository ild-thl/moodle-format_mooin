define("format_mooin4/local/courseeditor/custommutations",["exports","core/ajax"],(function(_exports,_ajax){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj};return _exports.default=class{async completeSection(stateManager,target){const course=stateManager.get("course");let ids=[];ids.push(target.dataset.id);const args={action:"complete_section",courseid:course.id,ids:ids,targetsectionid:target.dataset.id};let updates=await _ajax.default.call([{methodname:"core_courseformat_update_course",args:args}])[0];stateManager.processUpdates(JSON.parse(updates))}async updateSectionprogress(stateManager,sectionId,contentid,score,maxscore){await _ajax.default.call([{methodname:"format_mooin4_setgrade",args:{contentid:contentid,score:score,maxscore:maxscore}}])[0];const course=stateManager.get("course");let ids=[];ids.push(sectionId);const args={action:"update_sectionprogress",courseid:course.id,ids:ids,targetsectionid:sectionId};let updates=await _ajax.default.call([{methodname:"core_courseformat_update_course",args:args}])[0];window.console.log("MUTAtION PROGRESS"),stateManager.processUpdates(JSON.parse(updates))}async sectionSetChapter(stateManager,target){const course=stateManager.get("course");let ids=[];const targetSection=stateManager.state.section.get(target.dataset.id);ids.push(target.dataset.id);const args={action:"section_setChapter",courseid:course.id,ids:ids,targetsectionid:target.dataset.id};let updates=await _ajax.default.call([{methodname:"core_courseformat_update_course",args:args}])[0];stateManager.processUpdates(JSON.parse(updates)),stateManager.setReadOnly(!1);let lastChapter=stateManager.state.section.get(target.dataset.id),invisbleCounter=0;stateManager.state.section.forEach((section=>{section.number>targetSection.number&&(section.isChapter?(lastChapter=section,section.isChapter++,invisbleCounter=0):0==section.isChapter&&(section.parentChapter=lastChapter.isChapter,section.innerChapterNumber=section.number-lastChapter.number-invisbleCounter,section.visible?section.prefix=section.parentChapter+"."+section.innerChapterNumber:invisbleCounter++))})),stateManager.setReadOnly(!0)}async sectionUnsetChapter(stateManager,target){const course=stateManager.get("course");let ids=[];const targetSection=stateManager.state.section.get(target.dataset.id);ids.push(target.dataset.id);const args={action:"section_unsetChapter",courseid:course.id,ids:ids,targetsectionid:target.dataset.id};let updates=await _ajax.default.call([{methodname:"core_courseformat_update_course",args:args}])[0];stateManager.setReadOnly(!1);let lastChapter=stateManager.state.section.get(target.dataset.id),prevChapter=lastChapter.isChapter-1;stateManager.state.section.forEach((section=>{window.console.log(prevChapter),window.console.log(section.isChapter),section.isChapter==prevChapter&&(lastChapter=section)}));let invisbleCounter=0;stateManager.state.section.forEach((section=>{section.number>targetSection.number&&(section.isChapter&&1!=section.isChapter?(lastChapter=section,section.isChapter--,invisbleCounter=0):0==section.isChapter&&(section.parentChapter=lastChapter.isChapter,section.innerChapterNumber=section.number-lastChapter.number-invisbleCounter,section.visible?section.prefix=section.parentChapter+"."+section.innerChapterNumber:invisbleCounter++))})),stateManager.setReadOnly(!0),stateManager.processUpdates(JSON.parse(updates))}async setLastSectionModal(stateManager,id){const course=stateManager.get("course");let ids=[];ids.push(id);const args={action:"set_last_section_modal",courseid:course.id,ids:ids,targetsectionid:id};let updates=await _ajax.default.call([{methodname:"core_courseformat_update_course",args:args}])[0];stateManager.processUpdates(JSON.parse(updates))}setContinueSection(stateManager,type,id){stateManager.setReadOnly(!1);const state=stateManager.state;state.course.continueSection=id,state.section.forEach((section=>{section.id==id&&(section.isActiveSection=!0),section.parentChapter==state.section.get(id).parentChapter&&(section.containsActiveSection=!0)})),state.section.get(id).isActiveSection=!0,stateManager.setReadOnly(!0)}async getContinueSection(stateManager,target){const args={action:"getContinuesection",courseid:stateManager.state.course.id};let updates=await _ajax.default.call([{methodname:"core_courseformat_update_course",args:args}])[0];stateManager.processUpdates(JSON.parse(updates))}async readAllForumDiscussions(stateManager,forumid){const course=stateManager.state.course;let ids=[];ids.push(forumid);const args={action:"readAllForumDiscussions",courseid:course.id,ids:ids};let updates=await _ajax.default.call([{methodname:"core_courseformat_update_course",args:args}])[0];stateManager.processUpdates(JSON.parse(updates))}async reloadAllSectionPrefixes(stateManager,target){const course=stateManager.state.course;let ids=[];stateManager.state.section.forEach((section=>{ids.push(section.id)}));const args={action:"reload_all_section_prefixes",courseid:course.id,ids:ids};let updates=await _ajax.default.call([{methodname:"core_courseformat_update_course",args:args}])[0];stateManager.processUpdates(JSON.parse(updates))}},_exports.default}));

//# sourceMappingURL=custommutations.min.js.map